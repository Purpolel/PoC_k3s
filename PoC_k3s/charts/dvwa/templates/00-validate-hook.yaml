{{- $ns := .Release.Namespace -}}
---
# 1) ServiceAccount in dƒ≥e namespace
apiVersion: v1
kind: ServiceAccount
metadata:
  name: poc-validator
  namespace: {{ $ns }}

---
# 2) Role die alleen pods kan 'list'en
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: poc-validator-role
  namespace: {{ $ns }}
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["list"]

---
# 3) RoleBinding zodat onze Job met 'poc-validator' mag werken
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: poc-validator-binding
  namespace: {{ $ns }}
subjects:
  - kind: ServiceAccount
    name: poc-validator
roleRef:
  kind: Role
  name: poc-validator-role
  apiGroup: rbac.authorization.k8s.io

---
# 4) De PreSync Job die √©cht faalt als er al pods staan
apiVersion: batch/v1
kind: Job
metadata:
  name: validate-namespace
  annotations:
    # Dƒ≥t is de hook die v√≥√≥r je andere resources draait
    argocd.argoproj.io/hook: PreSync
    # Ruimt automatisch op als de Job slaagt
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  backoffLimit: 0
  template:
    spec:
      serviceAccountName: poc-validator
      restartPolicy: Never
      containers:
        - name: validate
          image: bitnami/kubectl:1.26
          env:
            - name: NAMESPACE
              value: "{{ $ns }}"
          command:
            - /bin/sh
            - -c
            - |
              echo "üîç Checking namespace '$NAMESPACE' for existing Pods..."
              pod_count=$(kubectl get pods -n "$NAMESPACE" --no-headers 2>/dev/null | wc -l)
              if [ "$pod_count" -gt 0 ]; then
                echo "‚ùå Namespace '$NAMESPACE' contains $pod_count Pod(s). Aborting sync."
                exit 1
              fi
              echo "‚úÖ Namespace is empty, proceeding."
              exit 0
